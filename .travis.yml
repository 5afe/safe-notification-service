language: python
cache: pip
python:
  - "3.6"
dist: trusty
env:
  global:
    - DATABASE_URL=psql://postgres@localhost/travisci
    - PIP_USE_MIRRORS=true
    - secure: yOpE1RMVuQTednR1UfzzJnDHC+mLJMCXqVfDtRbHr+hhRRP0NoSqQKYQGlV2ssU/qtzYCzlEDc64UxjLtBoWh+Fn5FgXIsWIeY99ygDWIG3rN1lwGfq5mnb3eZO2dPxzWQeS/4lXzwNlwVr/L3Fd2nJWM32B127UvQimzF1xedvHSTOHOpjsL97cvyPnVDIqzImnEHrhfIBzZ/V5aHaAInr2pdwmE7GsMBWubNnjEH3PlbRcZPiWpegpqa0xBtrK671vNnhhyDlhxvXGQ3Oerv+WhjPoGdhY6qar0glDF/wqFUFE4zWknrYORFubUIQb9J0zoFzTFzCnjJpGD4ADnRYHPUTv83EXJ/kgD7fFg/8pSn1fVaPo6dk6A8KlaxI3lNNcfI1KDcY/wpfZa9sck+7+mmTabamvPGRZHw8vH3hKFTFDTVRmolHFHAO0QEL75YmJbZjEu9hoWVlS7Ok9GToIGsN5m7sKXK/US8SUhSnx28QwgMUhpyzwog0Ub0d9SQlNRV1b17u6+PmpRXUdt6/hyxKp2d7hAOf6TYgbvVp5QH0NvIwpjrw3kB/iwZEyxOtJqAgzTV+0eiACJAy0lQFOWzftI7zhmMZQzyfFr/PLfsXIvoLfkyxkzJs71gEerqs+9RhMkMWUVcidGXnkBNC65szqjMy+KgEkz82kpb4=
    - secure: pz/qg3n8aht/UzYbxbrdgI8ynXIJG8dCL8fdmXVYdTJ/30BBytovsqKg5v1jKsE/eYJNdHMPKM38bCpC+/IaR5JHlD+BjFK8COv2u/CmAawK/o1m9zHQBEKUJWo1Q6+zDIRNAcur5cWRiaGJs4jOQs5mQcbgC4l57IjQEsnuTMbAcJT4PKc3XQZRSI6Q8Dpi56IjiOipLIyf1TuS9nh1b8sJFwehcH665TLUYFyrSqiSWddLZhySL5B15jgfmnBzDahkvIVFj99qEzx4H2RbvE77HSJIFjSGmkUuXPLKmWVXbtbpGloxXPYOLR5cBixA3SUJlbjXE19YuNcmeYOEWvRNSBaP/K+tEynp4Qz701twEbbgfPWn50Bpmqd0NOxU44dJHBiRFHSR6EK+x6OFU6zU6EOwgEjLhmLbDxA2LQJGXjML/rE8CAHniWI0mZ4DtpcM/8N5dCJ/QfhCqr4tu1tOyuCq60cz/+1yRJ9x28qF2WEI5htGrjlwTmlLsaH6a80vTeGHWuTwr4Ee7Z9BVEPTSEYYIpi7abLDdAfhtaqdjavTFTnR0GKd8yK00kB51S1N9T1JF8o5wLnMhif3F4sMNPwEQ0TAZ9jDrmKW0zWkafVjSVisQ+oZl+kaCSa1RxmngOYUwGST/4393nwJalnohdzzWVZk/BSblzliLuA=
services:
  - postgresql
before_script:
  - psql -c 'create database travisci;' -U postgres
install:
  - pip install -r requirements.txt
  - pip install coveralls
script:
  - coverage run --source=gnosis-safe-push-service manage.py test --settings=config.settings.test
after_success:
- coveralls
- # Create Docker image if branch master or develop and not on pull requests
  if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
    if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker build -t gnosis-safe-push-service -f docker/web/Dockerfile .;
      docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
      docker tag gnosis-safe-push-service gnosispm/gnosis-safe-push-service:staging;
      docker push gnosispm/gnosis-safe-push-service:staging;
    elif [ "$TRAVIS_BRANCH" == "develop" ]; then
      docker build -t gnosis-safe-push-service -f docker/web/Dockerfile .;
      docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
      docker tag gnosis-safe-push-service gnosispm/gnosis-safe-push-service:develop;
      docker push gnosispm/gnosis-safe-push-service:develop;
    fi
  fi
